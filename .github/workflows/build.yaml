name: Build and Push

on:
  release:
    types:
    - published
  push:
    branches:
    - '*'
    tags:
    - v*
    paths-ignore:
    - 'docs/**'
    - '**/*.md'
  pull_request:
    paths-ignore:
    - 'docs/**'
    - '**/*.md'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [linux/amd64, linux/arm64]

    steps:
    - uses: actions/checkout@v3
    - uses: docker/metadata-action@v4
      id: meta
      with:
        images: |
          ghcr.io/${{ github.repository_owner }}/markdown-paper-setup
        tags: |
          type=semver,pattern={{version}}
          type=ref,event=branch
          type=ref,event=tag
          type=ref,event=pr
          type=sha
        flavor: |
          latest=${{ github.ref == 'refs/heads/master' }}
    - name: Set up QEMU
      if: ${{ matrix.platform != 'linux/amd64' }}
      uses: docker/setup-qemu-action@v2
      with:
        image: tonistiigi/binfmt:latest
        platforms: ${{ matrix.platform }}
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      with:
        buildkitd-flags: --debug
    - name: Login to GHCR
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Build
      id: build
      uses: docker/build-push-action@v3
      with:
        context: .
        target: test
        platforms: ${{ matrix.platform }}
        push: false
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=registry,ref=ghcr.io/${{ github.repository_owner }}/markdown-paper-setup:buildcache
        cache-to: type=registry,ref=ghcr.io/${{ github.repository_owner }}/markdown-paper-setup:buildcache,mode=max
        secrets: |
          GIT_AUTH_TOKEN=${{ github.token }}
    - name: Output image digest
      id: digest
      run: echo "::set-output name=${{ matrix.platform }}::$(echo ${{ steps.build.outputs.digest }} | tr '/' '_')"

  push:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Login to GHCR
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Create and Push Multi-Arch Images
      run:
        for tag in ${{ needs.build.steps.meta.outputs.tags }} ; do
          docker manifest create $tag \
            --amend ${{ needs.build.steps.digest.outputs.linux_amd64 }} \
            --amend ${{ needs.build.steps.digest.outputs.linux_arm64 }}
          docker manifest push $tag
        done
